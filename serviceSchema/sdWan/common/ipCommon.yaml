---
$schema: http://json-schema.org/draft-07/schema#
title: MEF LSO IP Common Date Types and Enumerations
definitions:
  AddressFamilyIpv4Ipv6:
    description: >-
      Specifies whether the session is established over IPv4 or IPv6.
    enum:
      - IPV4
      - IPV6
    type: string
  Any:
    description: >-
      Used to specify ANY for IPv4 or IPv6 address.
    enum:
      - ANY
    type: string
  Bgp:
    description: >-
      When an entry in the (SD-WAN) UNI Routing Protocol is for BGP, BGP as specified in
      RFC 4271 is used across the UNI to exchange information. Reference MEF
      61.1 Section 12.7.3 BGP and MEF W70.2 Section 11.6.2 BGP.
    properties:
      subscriberAsNumber:
        description: BGP Subscriber Autonomous System number.
        type: integer
        minimum: 0
      peerAsNumber:
        description: BGP Peer Autonomous System Number.
        type: integer
        minimum: 0
      connectionAddressFamily:
        description: Connection Address Family (IPv4 or IPv6).
        $ref: "#/definitions/AddressFamilyIpv4Ipv6"
      peeringAddresses:
        description: Peering Addresses.
        $ref: "#/definitions/PeeringAddress"
      authentication:
        description:
          BGP Authentication. It is either None or if present is it a value of
          MD5 Password. It is assumed that an encrypted channel is used for API
          session so that the password is protected.
        type: string
        nullable: true
      bgpCommunityList:
        description:
          Used to control which routers are accepted, preferred, distributed, or
          advertised.
        items:
          $ref: "#/definitions/BgpCommunity"
        type: array
      bgpExtendedCommunityList:
        description:
          Mechanism for labeling information carried in BGP-4. Provide
          enhancement over existing BGP Community Attribute an extended range,
          the addition of type field.
        items:
          $ref: "#/definitions/BgpExtendedCommunity"
        type: array
      holdTime:
        description:
          Hold time in seconds. Indicates the agreed Hold Time used for BGP
          sessions. The possible values are 0 or an integer in the range
          3-65535.
        type: integer
        minimum: 0
        maximum: 65535
      damping:
        $ref: "#/definitions/Damping"
        description: >-
          Route flap damping. When the Damping parameter is NONE, the attribute
          is not set. When not NONE a single set of parameters described in
          Section 4.3 of RFC 2430 MUST be agreed.
        nullable: true
      asOverride:
        description:
          Autonomous System Override. The SP (or Operator) can overwrite
          instances of the Subscriber's AS Number in the AS Path with their own
          AS Number, when advertising routes to the Subscriber. This needs to be
          explicitly agreed between the SP and the Subscriber, and/or between an
          SP/SO and an Operator.
        $ref: "#/definitions/EnabledDisabled"
      administrativeDistance:
        description: BGP Administrative Distance.
        type: integer
        minimum: 0
    type: object
  BgpCommunity:
    description: >
      A  community is a group of destinations which share some common property.
      Each autonomous system administrator may define which communities a
      destination belongs to.
    properties:
      autonomousSystemNumber:
        description: The first two octets encoding the Autonomous System value.
        type: integer
        minimum: 0
        maximum: 65535
      autonomousSystemDefined:
        description: The remaining octets.
        type: integer
        minimum: 0
        maximum: 65535
      required:
        - autonomousSystemNumber
        - autonomousSystemDefined
  BgpExtendedCommunity:
    description: >-
      This attribute provides a mechanism for labeling information carried in
      BGP-4. These labels can be used to control the distribution of this
      information, or for other applications.
    properties:
      regularType:
        description: Regular Type Field, 1 octet length
        type: integer
        minimum: 0
        maximum: 256
      regularValue:
        description:
          Octets 2 - 8 of the value part of the address. Used in case only
          Regular Type is provided.
        type: integer
        minimum: 0
      extendedType:
        description: Extended Type Field, 2 octets length
        type: integer
        minimum: 0
        maximum: 65535
      extendedValue:
        description:
          Octets 3 - 8 of the value part of the address. Used in case only
          Extended Type is provided.
        type: integer
        minimum: 0
    oneOf:
      - required: [regularType, regularValue]
      - required: [extendedType, extendedValue]
  Damping:
    description: >-
      Damping parameters as defined in RFC 2439 BGP Route Flap Damping, Section
      4.2
    properties:
      cutoffThreshold:
        description: >-
          This value is expressed as a number of route withdrawals.  It is the
          value above which a route advertisement will be suppressed.
        type: integer
        minimum: 0
      decayHalfLifeWhileReachable:
        description: >-
          This value is the time duration in seconds during which the
          accumulated stability figure of merit will be reduced by half if the
          route if considered reachable (whether suppressed or not).
        type: integer
        minimum: 0
      decayHalfLifeWhileUnReachable:
        description: >-
          This value is the time duration in seconds during which the
          accumulated stability figure of merit will be reduced by half if the
          route if considered unreachable.  If not specified or set to zero, no
          decay will occur while a route remains unreachable.
        type: integer
        minimum: 0
      decayMemoryLimit:
        description: >-
          This is the maximum time (in seconds) that any memory of previous
          instability will be retained given that the route's state remains
          unchanged, whether reachable or unreachable.  This parameter is
          generally used to determine array sizes.
        type: integer
        minimum: 0
      maxHoldDownTime:
        description: >-
          This value is the maximum time a route can be suppressed no matter how
          unstable it has been prior to this period of stability. In seconds.
        type: integer
        minimum: 0
      numberOfReuseLists:
        description: >-
          This is the number of reuse lists.  It may be determined from
          reuse-list-max or set explicitly.
        type: integer
        minimum: 0
      reuseListMemoryReuseListMax:
        description: >-
          This is the time (in seconds) value corresponding to the last reuse
          list. This may be the maximum value of T-hold for all parameter sets
          of may be configured.
        type: integer
        minimum: 0
      reuseListTimeGranularity:
        description: >-
          This is the time (in seconds) interval between evaluations of the
          reuse lists.  Each reuse lists corresponds to an additional time
          increment.
        type: integer
        minimum: 0
      reuseThreshold:
        description: >-
          This value is expressed as a number of route withdrawals.  It is the
          value below which a suppressed route will now be used again.
        type: integer
        minimum: 0
      timeGranularity:
        description: >-
          This is the time granularity in seconds used to perform all decay
          computations.
        type: integer
        minimum: 0
      reuseIndexArraySize:
        description: >-
          This is the size of reuse index arrays.  This size determines the
          accuracy with which suppressed routes can be placed within the set of
          reuse lists when suppressed for a long time.
        type: integer
        minimum: 0
    type: object
  Dscp:
    description: >-
      Differentiated Services Code Point.
    type: integer
    maximum: 63
    minimum: 0
  EnabledDisabled:
    description: Enumeration to indicate Enabled/Disabled state of an attribute
    type: string
    enum:
      - "ENABLED"
      - "DISABLED"
  ForwardingInformation:
    description: >-
      Forwarding information, consisting of either a nexthop IP address in the
      Subscriber Network (if the access medium is multipoint capable, e.g.,
      Ethernet), or a specific UNI Access Link (if the access medium is strictly
      point-to-point, e.g., HDLC, PPP over DSL).
    properties:
      nextHopIpAddress:
        description: Next hop IP address.
        $ref: "#/definitions/Ipv4OrIpv6Address"
    type: object
  IanaProtocols:
    description: >-
      Protocol Numbers values. Reference IANA, Protocol Numbers.
    type: string
    enum:
      - HOPOPT
      - ICMP
      - IGMP
      - GGP
      - IPV4
      - ST
      - TCP
      - CBT
      - EGP
      - IGP
      - BBN_RCC_MON
      - NVP_II
      - PUP
      - ARGUS
      - EMCON
      - XNET
      - CHAOS
      - UDP
      - MUX
      - DCN_MEAS
      - HMP
      - PRM
      - XNS_IDP
      - TRUNK_1
      - TRUNK_2
      - LEAF_1
      - LEAF_2
      - RDP
      - IRTP
      - ISO_TP4
      - NETBLT
      - MFE_NSP
      - DCCP
      - 3PC
      - IDPR
      - XTP
      - DDP
      - IDRP_CMTP
      - TP_PLUS_PLUS
      - IL
      - IPV6
      - SDRP
      - IPV6_ROUTE
      - IPV6_FRAG
      - IDRP
      - RSVP
      - GRE
      - DSR
      - BNA
      - ESP
      - AH
      - I_NLSP
      - SWIPE
      - NARP
      - MOBILE
      - TLSP
      - SKIP
      - IPV6_ICMP
      - IPV6_NO_NXT
      - IPV6_OPTS
      - CFTP
      - SAT_EXPAK
      - KRYPTOLAN
      - RVD
      - IPPC
      - SAT_MON
      - VISA
      - IPCV
      - CPNX
      - CPHB
      - WSN
      - PVP
      - BR_SAT_MON
      - SUN_ND
      - WB_MON
      - WB_EXPAK
      - ISO_IP
      - VMTP
      - SECURE_VMTP
      - VINES
      - IPTM
      - NSFNET-IGP
      - DGP
      - TCF
      - EIGRP
      - OSPFIGP
      - SPRITE_RPC
      - LARP
      - MTP
      - AX_25
      - IPIP
      - MICP
      - SCC_SP
      - ETHERIP
      - ENCAP
      - GMTP
      - IFMP
      - PNNI
      - PIM
      - ARIS
      - SCPS
      - QNX
      - A_N
      - IP_COMP
      - SNP
      - COMPAQ_PEER
      - IPX_IN_IP
      - VRRP
      - PGM
      - L2TP
      - DDX
      - IATP
      - STP
      - SRP
      - UTI
      - SMP
      - SM
      - PTP
      - ISIS_OVER_IPV4
      - FIRE
      - CRTP
      - CRUDP
      - SSCOPMCE
      - IPLT
      - SPS
      - PIPE
      - SCTP
      - FC
      - RSVP_E2E_IGNORE
      - MOBILITY_HEADER
      - UDP_LITE
      - MPLS_IN_IP
      - MANET
      - HIP
      - SHIM6
      - WESP
      - ROHC
      - ETHERNET
      - AGGFRAG
      - UNASSIGNED
      - EXPERIMENTATION
      - RESERVED
  IanaProtocolsIntegerOrKeyword:
    description: >-
      Data type which allows Iana Protocols Integer values or keywords.
    oneOf:
      - required: [$ref: "#/definitions/IanaProtocols"]
      - required: [$ref: "#/definitions/IanaProtocolsIntegers"]
  IanaProtocolsIntegers:
    description: >-
      Protocol Number integers.
    type: integer
    maximum: 255
    minimum: 0
  Ipv4Address:
    description: Data type representing IPv4 address.
    type: string
    format: ipv4
  Ipv4AddressOrAny:
    description: >-
      Data type which allows an IPv4 address or any IPv4 Address.
    oneOf:
      - required: [$ref: "#/definitions/Ipv4Address"]
      - required: [$ref: "#/definitions/Any"]
  Ipv4ConnectionAddressing:
    description: >-
      Ipv4ConnectionAddressing is a data type representing how IPv4 addresses
      are allocated to the devices on the Subscriber side.
    properties:
      ipv4AddressingType:
        description: IPv4 Connection Addressing.
        $ref: "#/definitions/Ipv4AddressingType"
      ipv4PrimarySubnet:
        $ref: "#/definitions/Ipv4PrimarySubnet"
        description: >-
          Primary IPv4 Subnet. Includes IPv4 Prefix and Service Provider IPv4
          Addresses.
      ipv4SecondarySubnetList:
        description: >-
          Secondary IPv4 Subnet List. Includes IPv4 Prefix and Service Provider
          IPv4 Addresses.
        items:
          $ref: "#/definitions/Ipv4Subnet"
        type: array
    type: object
  Ipv4AddressingType:
    description: |
      Enumeration representing IPv4 Address Types.
      - DHCP: Dynamic Host Configuration Protocol (DHCP) is used the Subscriber devices 
      to request IPv4 addresses in a given subnet from the SP or Operator.
      - STATIC: IPv4 addresses in a given IPv4 subnet are statically assigned to the 
      SP or Operator and to the Subscriber.
      - UNNUMBERED: The SP or Operator and the Subscriber each assigned an IPv4 address
      (from their own address pools) independently. These addresses can be on different 
      subnets, and so an interface-based routing protocol is needed to ensure reachability.
    enum:
      - "DHCP"
      - "STATIC"
      - "UNNUMBERED"
    type: string
  Ipv4OrIpv6Prefix:
    description: IPv4 or IPv6 prefix. Includes subnet address and prefix length.
    properties:
      ipv4Prefix:
        description: IPv4 prefix.
        $ref: "#/definitions/Ipv4Prefix"
      ipv6Prefix:
        description: IPv6 prefix.
        $ref: "#/definitions/Ipv6Prefix"
    oneOf:
      - required: [ipv4Prefix]
      - required: [ipv6Prefix]
    type: object
  Ipv4OrIpv6Address:
    description: Data type representing IPv4 or IPV6 address.
    type: string
    oneOf:
      - format: ipv4
      - format: ipv6
  Ipv4Prefix:
    description:
      Data type representing IPv4 address prefix and mask length between 0 and
      31 bits.
    properties:
      ipv4Address:
        description: IPv4 address.
        $ref: "#/definitions/Ipv4Address"
      prefixLength:
        description: IPv4 address prefix. Length 0-31.
        type: integer
        minimum: 0
        maximum: 31
    type: object
  Ipv4PrimarySubnet:
    allOf:
      - $ref: "#/definitions/Ipv4Subnet"
      - description: >-
          Ipv4Subnet used in context of Primary Ipvc subnet. It adds the
          subscriberIpv4Address attribute to the Ipv4Subnet.
        properties:
          subscriberIpv4Address:
            description: Subscriber IPv4 Address
            $ref: "#/definitions/Ipv4Address"
          nullable: true
        type: object
  Ipv4Subnet:
    description: >-
      Ipv4Subnet is a data type representing an IPv4 subnet logical partition of
      an IP network. Included is list of Service Provider IPv4 addresses.
    properties:
      ipv4Prefix:
        description:
          IPv4 address prefix (IPv4 address prefix and mask length between 0 and
          31 in bits).
        $ref: "#/definitions/Ipv4Prefix"
      serviceProviderIpv4Addresses:
        description: >
          List of Service Provider IPv4 addresses.  [R25] If IPv4 Connection
          Addressing is DHCP, the UNI Access Link IPv4 Connection Addressing
          Primary Subnet parameter MUST contain only a single Service Provider
          IPv4 Address. Reference MEF 69.1[1] Section 9.4 Subscriber Internet
          Access Service: UNI Access Link Requirements
        items:
          $ref: "#/definitions/Ipv4Address"
        minItems: 1
        type: array
      reservedPrefixes:
        description: List of IPv4 Prefixes, possibly empty
        items:
          $ref: "#/definitions/Ipv4Prefix"
        type: array
      required:
        - ipv4Prefix
    type: object
  Ipv6Address:
    description: Data type representing IPv6 address.
    type: string
    format: ipv6
  Ipv6AddressOrAny:
    description: >-
      Data type which allows an IPv6 address or any IPv6 Address.
    oneOf:
      - required: [$ref: "#/definitions/Ipv6Address"]
      - required: [$ref: "#/definitions/Any"]
  Ipv6AddressingType:
    description: |
      Enumeration representing IPv6 Address Types specific for UNI Access Links.
      -DHCP: Dynamic Host Configuration Protocol (DHCP) is used by the Subscriber
      devices to request IPv6 addresses in a given subnet from the SP or Operator.
      -SLAAC: Stateless Address Autoconfiguration (SLAAC) is used by the Subscriber 
      devices to create unique IPv6 global addresses within an IP Prefix advertised 
      by the SP or Operator as described in RFC 4862.
      -STATIC: IPv6 addresses in a given IPv6 subnet are statically assigned to the 
      SP or Operator and to the Subscriber.
      - LL_ONLY: If the value is LL-only, these are only IPv6 addresses used on 
      the UNI.
    enum:
      - "DHCP"
      - "SLAAC"
      - "STATIC"
      - "LL_ONLY"
    type: string
  Ipv6ConnectionAddressing:
    description: >-
        UniIpv6ConnectionAddressing is a data type representing how IPv6 addresses
        are allocated to the devices on the Subscriber side.
    properties:
      ipv6AddressingType:
        description: IPv6 Connection Addressing.
        $ref: "#/definitions/Ipv6AddressingType"
      subscriberIpv6Address:
        $ref: "#/definitions/Ipv6Address"
        description: Subscriber IPv6 address.
      ipv6Subnet:
        description: Ipv6 Subnet
        items:
          $ref: "#/definitions/Ipv6Subnet"
        type: array
    type: object
  Ipv6Prefix:
    description:
      Data type representing IPv6 address prefix and mask length between 0 and
      127 in bits.
    properties:
      ipv6Address:
        description: IPv6 address.
        $ref: "#/definitions/Ipv6Address"
      prefixLength:
        description: IPv6 address prefix. Length 0-127.
        type: integer
        minimum: 0
        maximum: 127
    type: object
  Ipv6Subnet:
    description: >-
      IPv6Subnet is a data type representing an IPv6 subnet logical partition of
      an IP network. Included is list of Service Provider IPv6 addresses.
    properties:
      ipv6Prefix:
        description:
          IPv6 Prefix (IPv6 address prefix and mask length between 0 and 127 in
          bits).
        $ref: "#/definitions/Ipv6Prefix"
      serviceProviderIpv6Addresses:
        description: List of IPv6 Service Provider address(es).
        items:
          $ref: "#/definitions/Ipv6Address"
        minItems: 1
        type: array
      reservedPrefixes:
        description: List of IPv6 Prefixes, possibly empty
        items:
          $ref: "#/definitions/Ipv6Prefix"
        type: array
      required:
        - ipv6Prefix
    type: object
  Ospf:
    description: >-
      When an entry in the UNI Routing Protocols is for OSPF, OSPF as specified
      in RFC 2328 (for IPv4) and/or RFC 5340 (for IPv6) is used across each UNI
      Access Link to exchange routing information. Reference MEF 61.1 Section
      12.7.2 OSPF.
    properties:
      areaId:
        description:
          Area ID (0-429967295), normally expressed as an IPv4 address.
        type: integer
        minimum: 0
        maximum: 429967295
      areaType:
        description: OSPF Area Type enumeration.
        $ref: "#/definitions/OspfAreaType"
      authenticationType:
        description: OSPF Authentication Type.
        $ref: "#/definitions/OspfAuthenticationType"
      helloInterval:
        description: Hello interval (0-65535, in seconds)
        type: integer
        minimum: 0
        maximum: 65535
      deadInterval:
        description: Dead interval (0-429496295, in seconds)
        type: integer
        minimum: 0
        maximum: 429967295
      retransmissionInterval:
        description: Retransmit interval (integer greater than 0, in seconds)
        type: integer
        minimum: 0
      administrativeDistance:
        description: Administrative distance (integer greater than 0)
        type: integer
        minimum: 0
    type: object
  OspfAreaType:
    description:
      OSPF Area Type enumeration. Reference MEF 61.1 Section 12.7.2 OSPF
    enum:
      - NORMAL
      - STUB
      - NSSA
    type: string
  OspfAuthenticationType:
    description: OSPF Authentication Type enumeration.
    enum:
      - NONE
      - PASSWORD
      - MESSAGE_DIGEST
    type: string 
  PeeringAddress:
    description: >-
      Peering Addresses. Connection Addresses, or Loopbacks plus a list of pairs
      of IP addresses. Reference MEF 61.1 Section 12.7.3 BGP.
    properties:
      peeringAddressType:
        description: |
          If the Peering Addresses parameter is CONNECTION_ADDRESSES, a separate
          BGP peering session is established over each UNI Access Link, using
          the primary IPv4 addresses in the UNI Access Link IPv4 Connection
          Addressing Service Attribute (section 13.4) or the first IPv6
          addresses in the UNI Access Link IPv6 Connection Addressing Service
          Attribute (section 13.5), as indicated by the Connection Address
          Family parameter.
          If the Peering Addresses parameter is LOOPBACKS, a list of pairs of IP
          addresses is additionally specified, each pair containing the
          Subscriber's loopback address and the SP's or Operator's loopback
          address. A single BGP peering session is established for each pair of
          addresses.
        $ref: "#/definitions/PeeringAddressType"
      subscriberAndSpLoopbackAddresses:
        description:
          A list of pairs of IP addresses, each pair containing the Subscriber's
          loopback address and the SP's or Operator's loopback address. A single
          BGP peering session is established for each pair of addresses.
        items:
          $ref: "#/definitions/SubscriberAndSpLoopbackAddresses"
        type: array
    type: object
  PeeringAddressType:
    description: >
      If the Peering Addresses parameter is CONNECTION_ADDRESSES, a separate BGP
      peering session is established over each UNI Access Link, using the
      primary IPv4 addresses in the UNI Access Link IPv4 Connection Addressing
      Service Attribute (section 13.4) or the first IPv6 addresses in the UNI
      Access Link IPv6 Connection Addressing Service Attribute (section 13.5),
      as indicated by the Connection Address Family parameter. If the Peering
      Addresses parameter is LOOPBACKS, a list of pairs of IP addresses is
      additionally specified, each pair containing the Subscriber's loopback
      address and the SP's or Operator's loopback address. A single BGP peering
      session is established for each pair of addresses.
    enum:
      - CONNECTION_ADDRESSES
      - LOOPBACKS
  ProtocolV4:
      description: >-
        IPv4 Protocol List. List of integers in the range 0 to 255 or a list of keywords
        for IANA Protocol Numbers Registry. Reference MEF W70.2 Section 9.14 Table-7.
      properties:
        protoV4:
          description: List of IPv6 Service Provider address(es).
          type: array
          items:
            type: integer
          minimum: 0
          maximum: 255
        protoV4KeyWord:
          description: List of IPv6 Service Provider address(es).
          type: array
          items:
            $ref: "#/definitions/IanaProtocolNumbers"
      type: object
      oneOf:
        - required: [protoV4]
        - required: [protoV4KeyWord]
  RoutingProtocols:
    description: >-
      Data type to support routing protocols and associated parameters that are used to exchange 
      IP routes across a UNI.  The value is a list of protocols (possibly empty), where each entry 
      consists of the protocol name (one of Static, BGP, or OSPF) the type of routes that will 
      be exchanged (one of IPv4 or IPv6 or Both) and a set of additional parameters as specified. 
      Reference MEF 61.1 Section 12.7 UNI Routing Protocols Service Attribute or MEF W70.2 
      Section 11.6 SD-WAN UNI Routing Protocols Service Attribute.
    properties:
      bgp:
        description: BGP routing protocol configuration options.
        $ref: "#/definitions/RoutingProtocolsBgpOptions"
        nullable: true
      ospf:
        description: OSPF routing protocol configuration options.
        $ref: "#/definitions/RoutingProtocolsOspfOptions"
        nullable: true
      static:
        description: Static routing configuration options.
        $ref: "#/definitions/RoutingProtocolsStaticOptions"
        nullable: true
    type: object
  RoutingProtocolsBgpIpv4AndIpv6:
    type: object
    description: >-
      Configuration for exchanging IPv4 and IPv6 types of routes.
    properties:
      ipv4:
        description: >-
          Configuration for exchanging IPv4 types of routes.
        $ref: "#/definitions/Bgp"
      ipv6:
        description: >-
          Configuration for exchanging IPv6 types of routes.
        $ref: "#/definitions/Bgp"
    required:
      - ipv4
      - ipv6
  RoutingProtocolsBgpOptions:
    description: |
      BGP routing protocol configuration options. The configuration of the BGP
      can be provided for the following type pf routes that will be exchanged:
      - ipv4, or
      - ipv6, or
      - both, or
      - ipv4 and ipv6
    properties:
      ipv4:
        description: >-
          Configuration for exchanging IPv4 types of routes.
        $ref: "#/definitions/Bgp"
      ipv6:
        description: >-
          Configuration for exchanging IPv6 types of routes.
        $ref: "#/definitions/Bgp"
      both:
        description: >-
          Configuration for exchanging both IPv4 and IPv6 types of routes.
        $ref: "#/definitions/Bgp"
      ipv4AndIpv6:
        description: >-
          Configuration for exchanging IPv4 and IPv6 types of routes.
        $ref: "#/definitions/RoutingProtocolsBgpIpv4AndIpv6"
    oneOf:
      - required: [ipv4]
      - required: [ipv6]
      - required: [both]
      - required: [ipv4AndIpv6]
  RoutingProtocolsOspfIpv4AndIpv6:
    description: >-
      Configuration for exchanging IPv4 and IPv6 types of routes.
    properties:
      ipv4:
        description: >-
          Configuration for exchanging IPv4 types of routes.
        $ref: "#/definitions/Ospf"
      ipv6:
        description: >-
          Configuration for exchanging IPv6 types of routes.
        $ref: "#/definitions/Ospf"
    required:
      - ipv4
      - ipv6
  RoutingProtocolsOspfOptions:
    description: |
      OSPF routing protocol configuration options. The configuration of the BGP
      can be provided for the following type pf routes that will be exchanged:
      - ipv4, or
      - ipv6, or
      - both, or
      - ipv4 and ipv6
    properties:
      ipv4:
        description: >-
          Configuration for exchanging IPv4 types of routes.
        $ref: "#/definitions/Ospf"
      ipv6:
        description: >-
          Configuration for exchanging IPv6 types of routes.
        $ref: "#/definitions/Ospf"
      both:
        description: >-
          Configuration for exchanging both IPv4 and IPv6 types of routes.
        $ref: "#/definitions/Ospf"
      ipv4AndIpv6:
        description: >-
          Configuration for exchanging IPv4 and IPv6 types of routes.
        $ref: "#/definitions/RoutingProtocolsOspfIpv4AndIpv6"
    oneOf:
      - required: [ipv4]
      - required: [ipv6]
      - required: [both]
      - required: [ipv4AndIpv6]
  RoutingProtocolsStaticIpv4AndIpv6:
    description: >-
      Configuration for exchanging IPv4 and IPv6 types of routes.
    properties:
      ipv4:
        description: >-
          Configuration for exchanging IPv4 types of routes.
        $ref: "#/definitions/Static"
      ipv6:
        description: >-
          Configuration for exchanging IPv6 types of routes.
        $ref: "#/definitions/Static"
    required:
      - ipv4
      - ipv6
  RoutingProtocolsStaticOptions:
    description: >-
      Static routing configuration options. The configuration of the BGP can be
      provided for the following type pf routes that will be exchanged: - ipv4,
      or - ipv6, or - both, or - ipv4 and ipv6
    properties:
      ipv4:
        description: >-
          Configuration for exchanging IPv4 types of routes.
        $ref: "#/definitions/Static"
      ipv6:
        description: >-
          Configuration for exchanging IPv6 types of routes.
        $ref: "#/definitions/Static"
      both:
        description: >-
          Configuration for exchanging both IPv4 and IPv6 types of routes.
        $ref: "#/definitions/Static"
      ipv4AndIpv6:
        description: >-
          Configuration for exchanging IPv4 and IPv6 types of routes.
        $ref: "#/definitions/RoutingProtocolsStaticIpv4AndIpv6"
    oneOf:
      - required: [ipv4]
      - required: [ipv6]
      - required: [both]
      - required: [ipv4AndIpv6]
  ServiceNameAndTransportProtocols:
    type: object
    description: >-
      Service names and port numbers are used to distinguish between different services
      that run over transport protocols such as TCP, UDP, DCCP, and SCTP.
    properties:
      serviceName:
        type: string
      portNumber:
        type: integer
      min: 0
      max: 65535
      transportProtocol:
        type: string
        enum:
          - TCP
          - UDP
  ServiceNameAndTransportProtocolsOrAny:
    description: >-
      Data type which allows an ServiceNameAndTransportProtocol or Any.
    oneOf:
      - required: [$ref: "#/definitions/ServiceNameAndTransportProtocols"]
      - required: [$ref: "#/definitions/Any"]
  Static:
    description: >-
      When an entry in the UNI Routing Protocols list is for Static, the IP
      Prefixes used in the Subscriber Network that are reachable via this UNI
      are specified as additional parameters in the entry. These are known as
      Static IP Prefixes. Reference MEF 61.1 Section 12.7.1 Static.
    properties:
      staticIpEntry:
        description: Static IP address entry.
        items:
          $ref: "#/definitions/StaticIpEntry"
        minItems: 1
        type: array
    type: object
  StaticIpEntry:
    description: >-
      StaticIpEntry data type including IPv4/IPv6 prefixes, forwarding
      information and administrative distance.
    properties:
      administrativeDistance:
        description: Administrative distance, an integer > 0.
        type: integer
        minimum: 0
      forwardingInformation:
        description:
          Forwarding information with either Next Hop IP address or UNI Access
          Link identifier.
        $ref: "#/definitions/ForwardingInformation"
      staticPrefix:
        description: IPv4 or IPv6 Prefix that is advertised.
        $ref: "#/definitions/Ipv4OrIpv6Prefix"
    type: object
  SubscriberAndSpLoopbackAddresses:
    description: >-
      A list of pairs of IP addresses, each pair containing the Subscriber's
      loopback address and the SP's or Operator's loopback address. A single BGP
      peering session is established for each pair of addresses.
    properties:
      subscriberLoopbackAddress:
        description:
          Subscriber's loopback Address for BGP establishing a session
        $ref: "#/definitions/Ipv4OrIpv6Address"
      spLoopbackAddress:
        description:
          Service Provider's loopback Address for BGP establishing a session
        $ref: "#/definitions/Ipv4OrIpv6Address"