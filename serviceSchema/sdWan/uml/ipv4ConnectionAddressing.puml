@startuml

skinparam {
    FontName Times
    ClassBackgroundColor White
    ClassBorderColor Black
    ClassBorderColor<<ServiceSpecification>> FireBrick
}
!define datatype(x) class x << (D,#FF7700) DataType>>
!define enum(x) class x << (E,#ADD1B2) Enum>>

datatype(Ipv4ConnectionAddressing) {
    ipv4AddressingType: Ipv4AddressingType [1]
    ipv4PrimarySubnet: Ipv4PrimarySubnet [1]
    ipv4SecondarySubnet: Ipv4Subnet [0..1]
}

datatype(Ipv4Address) {
    String/ipv4: format ipv4
}

enum(Jack) {
    - DHCP
    - STATIC
    - UNNUMBERED
}

enum Ipv4AddressingType {
    - DHCP 
    - STATIC 
    - UNNUMBERED
    }
    
datatype(Ipv4Prefix) {
    ipv4Address: Ipv4Address
    prefixLength: Integer
}

Ipv4Prefix *--> Ipv4Address: ipv4Address

datatype(Ipv4PrimarySubnet) {
    subscriberIpAddress: Ipv4Address [0..1] currently not supported
}

Ipv4PrimarySubnet *--> [0..1] Ipv4Address

datatype(Ipv4Subnet) {
    ipv4Prefix: Ipv4Prefix
    serviceProviderIpv4Addresses: Ipv4Address [1..*]
}

Ipv4Subnet *--> Ipv4Prefix
Ipv4Subnet *--> "1..*" Ipv4Address

Ipv4Subnet <|-- Ipv4PrimarySubnet

Ipv4ConnectionAddressing *-[dotted]-> Ipv4AddressingType: ipv4AddressingType
Ipv4ConnectionAddressing *--> Ipv4PrimarySubnet: ipv4PrimarySubnet
Ipv4ConnectionAddressing *--> Ipv4Subnet: ipv4SecondarySubnetList


@enduml