@startuml performanceMonitoringDataModel
skinparam {
    ClassBackgroundColor White
    ClassBorderColor Black
}

left to right direction


class CancelPerformanceJob {

    cancellationDeniedReason: string
    creationDate: date-time
    href: string
    id*: string
    state*: PerformanceJobProcessStateType
}
CancelPerformanceJob_Common <|-- CancelPerformanceJob



class CancelPerformanceJob_Common {

    cancellationReason: string
}

CancelPerformanceJob_Common *-->"1" PerformanceJobRef : performanceJob


class CancelPerformanceJob_Create {

}
CancelPerformanceJob_Common <|-- CancelPerformanceJob_Create



class CancelPerformanceJob_Find {

    creationDate: date-time
    id*: string
    state*: PerformanceJobProcessStateType
}

CancelPerformanceJob_Find *-->"1" PerformanceJobRef : performanceJob


class DayOfMonth {

}



class DayOfWeek {

}

class FileTransferData {

    fileFormat: string
    fileLocation: uri
    transportProtocol: string
    compressionType: string
    packingType: string
    retentionPeriod: string
}



class HourRange {

    start: date-time
    end: date-time
}



enum Interval {

    10 milliseconds
    100 milliseconds
    1 second
    10 second
    1 minute
    5 minutes
    15 minutes
    30 minutes
    1 hour
    24 hours
    1 month
    1 year
    not applicable
}
enum JobType {

    proactive
    on-demand
    passive
}

class ModifyPerformanceJob {

    creationDate: date-time
    href: string
    id*: string
    modificationDeniedReason: string
    state*: PerformanceJobProcessStateType
}
ModifyPerformanceJob_Common <|-- ModifyPerformanceJob



class ModifyPerformanceJob_Common {

    buyerJobId: string
    consumingApplicationId: string
    description: string
    modificationReason: string
    producingApplicationId: string
}

ModifyPerformanceJob_Common *--> FileTransferData : fileTransferData
ModifyPerformanceJob_Common *-->"1" PerformanceJobRef : performanceJob
ModifyPerformanceJob_Common *--> ModifyPerformanceJob_ProfileValue : performanceProfile
ModifyPerformanceJob_Common *--> ScheduleDefinition : scheduleDefinition
ModifyPerformanceJob_Common *--> ServicePayloadSpecificAttributes : servicePayloadSpecificAttributes


class ModifyPerformanceJob_Create {

}
ModifyPerformanceJob_Common <|-- ModifyPerformanceJob_Create



class ModifyPerformanceJob_Find {

    creationDate: date-time
    id*: string
    state*: PerformanceJobProcessStateType
}

ModifyPerformanceJob_Find *-->"1" PerformanceJobRef : performanceJob


class ModifyPerformanceJob_ProfileValue {

    granularity: Interval
    jobPriority: integer
    outputFormat: OutputFormat
    reportingPeriod: Interval
    resultFormat: ResultFormat
}



class MonthlyScheduleDayOfWeekDefinition {

}

MonthlyScheduleDayOfWeekDefinition *-->"*" DayOfWeek : recurringDaySequence
MonthlyScheduleDayOfWeekDefinition *-->"*" DayOfMonth : dayOfMonthRecurrence


enum OutputFormat {

    json
    xml
    avro
    csv
}
class PerformanceJob {

    creationDate*: date-time
    href: uri
    id*: string
    lastModifiedDate: date-time
    rejectionReason: string
    state*: PerformanceJobStateType
}
PerformanceJob_Common <|-- PerformanceJob



class PerformanceJobComplexQuery {

    buyerJobId: string
    consumingApplicationId: string
    creationDate: date-time
    description: string
    granularity: Interval
    jobPriority: integer
    jobType: JobType
    producingApplicationId: string
    reportingPeriod: Interval
    state: PerformanceJobStateType
}

PerformanceJobComplexQuery *--> PerformanceJobRef : performanceJob
PerformanceJobComplexQuery *--> PerformanceProfileRef : performanceProfile
PerformanceJobComplexQuery *--> ScheduleDefinition : scheduleDefinition
PerformanceJobComplexQuery *--> ServicePayloadSpecificAttributes : servicePayloadSpecificAttributes


class PerformanceJobComplexQuery_Create {

    buyerJobId: string
    consumingApplicationId: string
    creationDate.gt: date-time
    creationDate.lt: date-time
    granularity: Interval
    jobPriority: integer
    jobType: JobType
    producingApplicationId: string
    reportingPeriod: Interval
    state: PerformanceJobStateType
}

PerformanceJobComplexQuery_Create *--> PerformanceProfileRef : performanceProfile
PerformanceJobComplexQuery_Create *--> ScheduleDefinition : scheduleDefinition
PerformanceJobComplexQuery_Create *--> ServicePayloadSpecificAttributes : servicePayloadSpecificAttributes


enum PerformanceJobProcessStateType {

    accepted
    acknowledged
    completed
    declined
}
class PerformanceJobRefOrValue {

    @type*: string
}



class PerformanceJobRef {

    href: string
    id*: string
}
PerformanceJobRefOrValue <|-- PerformanceJobRef



class PerformanceJobValue {

    consumingApplicationId: string
    granularity: Interval
    outputFormat*: OutputFormat
    producingApplicationId: string
    resultFormat*: ResultFormat
}
PerformanceJobRefOrValue <|-- PerformanceJobValue

PerformanceJobValue *--> FileTransferData : fileTransferData
PerformanceJobValue *-->"1" ServicePayloadSpecificAttributes : servicePayloadSpecificAttributes


enum PerformanceJobStateType {

    acknowledged
    cancelled
    completed
    in-progress
    pending
    rejected
    resource-unavailable
    scheduled
    suspended
}
class PerformanceJob_Common {

    buyerJobId: string
    consumingApplicationId: string
    description: string
    producingApplicationId: string
}

PerformanceJob_Common *--> FileTransferData : fileTransferData
PerformanceJob_Common *-->"1" PerformanceProfileRefOrValue : performanceProfile
PerformanceJob_Common *--> ScheduleDefinition : scheduleDefinition
PerformanceJob_Common *-->"1" ServicePayloadSpecificAttributes : servicePayloadSpecificAttributes


class PerformanceJob_Create {

}
PerformanceJob_Common <|-- PerformanceJob_Create



class PerformanceJob_Find {

    buyerJobId: string
    consumingApplicationId: string
    creationDate*: date-time
    description: string
    id*: string
    producingApplicationId: string
    state*: PerformanceJobStateType
}

PerformanceJob_Find *-->"1" PerformanceProfileRefOrValue : performanceProfile
PerformanceJob_Find *--> ScheduleDefinition : scheduleDefinition


class PerformanceProfileRefOrValue {

    @type*: string
}



class PerformanceProfileRef {

    href: string
    id*: string
}
PerformanceProfileRefOrValue <|-- PerformanceProfileRef



class PerformanceProfileValue {

    granularity: Interval
    jobPriority: integer
    jobType*: JobType
    outputFormat*: OutputFormat
    reportingPeriod: Interval
    resultFormat*: ResultFormat
}
PerformanceProfileRefOrValue <|-- PerformanceProfileValue



class RecurringFrequency {

    recurringFrequencyValue*: integer
    recurringFrequencyUnits*: string
}





enum ResultFormat {

    payload
    attachment
}

class ResumePerformanceJob {

    creationDate: date-time
    href: string
    id*: string
    resumptionDeniedReason: string
    state*: PerformanceJobProcessStateType
}
ResumePerformanceJob_Common <|-- ResumePerformanceJob



class ResumePerformanceJob_Common {

    resumptionReason: string
}

ResumePerformanceJob_Common *-->"1" PerformanceJobRef : performanceJob


class ResumePerformanceJob_Create {

}
ResumePerformanceJob_Common <|-- ResumePerformanceJob_Create



class ResumePerformanceJob_Find {

    creationDate: date-time
    id*: string
    state*: PerformanceJobProcessStateType
}

ResumePerformanceJob_Find *-->"1" PerformanceJobRef : performanceJob


class ScheduleDefinition {

    scheduleDefinitionStartTime: date-time
    scheduleDefinitionEndTime: date-time
    scheduleDefinitionHourRange: object
}

ScheduleDefinition *--> RecurringFrequency : recurringFrequency
ScheduleDefinition *--> MonthlyScheduleDayOfWeekDefinition : monthlyScheduleDayOfWeekDefinition
ScheduleDefinition *-->"*" DayOfWeek : weeklyScheduledDefinition
ScheduleDefinition *-->"*" HourRange : scheduleDefinitionHourRange

class ServicePayloadSpecificAttributes {

    @type*: string
}



class SuspendPerformanceJob {

    creationDate: date-time
    href: string
    id*: string
    state*: PerformanceJobProcessStateType
    suspensionDeniedReason: string
}
SuspendPerformanceJob_Common <|-- SuspendPerformanceJob



class SuspendPerformanceJob_Common {

    suspensionReason: string
}

SuspendPerformanceJob_Common *-->"1" PerformanceJobRef : performanceJob


class SuspendPerformanceJob_Create {

}
SuspendPerformanceJob_Common <|-- SuspendPerformanceJob_Create



class SuspendPerformanceJob_Find {

    creationDate: date-time
    id*: string
    state*: PerformanceJobProcessStateType
}

SuspendPerformanceJob_Find *-->"1" PerformanceJobRef : performanceJob


class TrackingRecord {

    creationDate*: date-time
    description: string
    id*: string
    relatedObjectId*: string
    request: string
    system: string
    user: string
}



class TrackingRecord_Find {

    creationDate*: date-time
    description: string
    relatedObjectId*: string
    user: string
}



@enduml
