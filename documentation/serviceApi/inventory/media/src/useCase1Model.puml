@startuml
skinparam {
    ClassBackgroundColor White
    ClassBorderColor Black
}


class MefServiceConfiguration {

    @type*: string
}



class Service {

    description: string
    endDate: date-time
    externalId: string
    serviceDate: string
    serviceType: string
    startDate: date-time
    startMode: string
    state: ServiceStateType
}

Service *-->"*" Note_BusSof : note
Service *-->"*" RelatedPlaceRefOrValue : place
Service *-->"*" RelatedContactInformation : relatedContactInformation
Service *--> MefServiceConfiguration : serviceConfiguration
Service *-->"*" ServiceOrderItemRef : serviceOrderItem
Service *-->"*" ServiceRelationship : serviceRelationship


class ServiceOrderItemRef {

    itemId*: string
    serviceOrderHref: string
    serviceOrderId: string
}



class ServiceRef {

    href: uri
    id*: string
}



class ServiceRelationship {

    relationshipType*: string
}

ServiceRelationship *--> "1" ServiceRef : service

enum ServiceStateType {

    feasibilityChecked
    designed
    reserved
    active
    inactive
    terminated
}
class RelatedContactInformation {

    emailAddress*: string
    name*: string
    number*: string
    numberExtension: string
    organization: string
    role*: string
}

RelatedContactInformation *--> FieldedAddressValue : postalAddress


class FieldedAddressValue {

    city*: string
    country*: string
    locality: string
    postcode: string
    postcodeExtension: string
    stateOrProvince: string
    streetName*: string
    streetNr: string
    streetNrLast: string
    streetNrLastSuffix: string
    streetNrSuffix: string
    streetSuffix: string
    streetType: string
}

FieldedAddressValue *--> GeographicSubAddress : geographicSubAddress


class Note_BusSof {

    author*: string
    date*: date-time
    id*: string
    source*: BusSofType
    text*: string
}



enum BusSofType {

    bus
    sof
}
class RelatedPlaceRefOrValue {

    @type*: string
    @schemaLocation: uri
    role*: string
}



class FieldedAddress {

    city*: string
    country*: string
    locality: string
    postcode: string
    postcodeExtension: string
    stateOrProvince: string
    streetName*: string
    streetNr: string
    streetNrLast: string
    streetNrLastSuffix: string
    streetNrSuffix: string
    streetSuffix: string
    streetType: string
}
RelatedPlaceRefOrValue <|-- FieldedAddress

FieldedAddress *--> GeographicSubAddress : geographicSubAddress


class FormattedAddress {

    addrLine1*: string
    addrLine2: string
    city*: string
    country*: string
    locality: string
    postcode: string
    postcodeExtension: string
    stateOrProvince: string
}
RelatedPlaceRefOrValue <|-- FormattedAddress



class GeographicAddressLabel {

    externalReferenceId*: string
    externalReferenceType*: string
}
RelatedPlaceRefOrValue <|-- GeographicAddressLabel



class GeographicAddressRef {

    href: string
    id*: string
}
RelatedPlaceRefOrValue <|-- GeographicAddressRef



class GeographicSiteRef {

    href: string
    id*: string
}
RelatedPlaceRefOrValue <|-- GeographicSiteRef



class GeographicSubAddress {

    buildingName: string
    levelNumber: string
    levelType: string
    privateStreetName: string
    privateStreetNumber: string
}

GeographicSubAddress *-->"*" GeographicSubAddressUnit : subUnit


class GeographicPoint {

    spatialRef*: string
    x*: string
    y*: string
    z: string
}
RelatedPlaceRefOrValue <|-- GeographicPoint



class GeographicSubAddressUnit {

    subUnitNumber*: string
    subUnitType*: string
}


@enduml
