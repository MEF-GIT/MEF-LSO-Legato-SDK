openapi: 3.0.3
info:
  title: Legato Service Inventory API
  version: 4.0.0-RC
  description: |-
    The Service Inventory API provides a standardized mechanism for retrieving 
    *ServiceInstances*. Using these APIs Business Applications (BUS) systems 
    query the **Service Inventory** system for *ServiceInstances* that were 
    created by the **Service Order Management** system in the Service 
    Orchestration Function (SOF).

    Additionally, the APIs also allow the BUS to register listeners to be 
    notified of the changes to the *ServiceInstances*.  

    - MEF Developer Guide Reference : MEF_W99 v1.0

    - TMF API Reference : TMF 638 v18.5.1

    Copyright Â© MEF 2020. All Rights Reserved
  
    This file includes content based on the TM Forum Service Inventory Management API
    (TMF638 v3.0.0) available at
    https://github.com/tmforum-apis/TMF638_ServiceInventory, which is licensed
    by the TM Forum under the Apache License version 2.0. Such content has been
    modified by the MEF Forum and its contributors.
tags:
  - name: Service
    description: |-
      Mechanisms for BUS to query and retrieve *ServiceInstances*.
  - name: EventSubscriptionHub
    description: |-
      Mechanisms for BUS to subscribe/unsubscribe to *Notifications*.

servers:
  - url: https://{server}:{port}{basePath}
    variables:
      server:
        default: 'mef.net' 
      port:
        enum:
          - '8443'
          - '443'
        default: '8443'
      basePath:
        default: /mefApi/legato/serviceInventory/v4

paths:
  /service:
    get:
      tags:
        - Service
      operationId: serviceFind
      summary: List services
      description: >-
        This operation list service entities. 
        Attribute selection is restricted. 
        fields attribute may be used to filter retrieved attribute(s) for each
        service
      deprecated: false
      parameters:
        - name: relatedParty.id
          required: false
          in: query
          description: ''
          schema:
            type: string
        - name: serviceSpecification.id
          required: false
          in: query
          description: ''
          schema:
            type: string
        - name: serviceSpecification.name
          required: false
          in: query
          description: ''
          schema:
            type: string
        - name: fields
          required: false
          in: query
          description: |- 
            Comma-separated properties of the Service instance to be included 
            in the returned response
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: |-
            Requested start index in a ordered list (sorted by id property) of 
            matching Service instances to be provided in response. 
          schema:
            type: integer
        - name: limit
          required: false
          in: query
          description: |-
            Requested maximum number of Service instances to be provided 
            in the response
          schema:
            type: integer
      responses:
        '200':
          description: Ok
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: 'serviceInventorySchema.openapi.yaml#/components/schemas/Service'
        '400':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/NotFound'
        '405':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/MethodNotAllowed'
        '408':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/RequestTimeout'
        '422':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/UnprocessableEntity'
        '500':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/InternalServerError'
        '503':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/ServiceUnavailable'

  '/service/{id}':
    get:
      tags:
        - Service
      operationId: serviceGet
      summary: Retrieve a service
      description: |-
        This operation retrieves a service entity. 
        Attribute selection is enabled for all first level attributes.
      deprecated: false
      parameters:
        - name: id
          required: true
          in: path
          description: "Identifier of the Service instance"
          schema:
            type: string
        - name: fields
          required: false
          in: query
          description: |- 
            Comma-separated properties of the Service instance to be included 
            in the returned response
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json;charset=utf-8:
              schema:
                $ref: 'serviceInventorySchema.openapi.yaml#/components/schemas/Service'
        '400':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/NotFound'
        '422':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/UnprocessableEntity'
        '500':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/InternalServerError'
        '503':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/ServiceUnavailable'

  /hub:
    post:
      tags:
        - EventSubscriptionHub
      operationId: hubCreate
      summary: Create Hub
      description: Structure used to create a hub (to subscribe to notification
      deprecated: false
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '../common/hubSchema.openapi.yaml#/components/schemas/EventSubscriptionInput'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '../common/hubSchema.openapi.yaml#/components/schemas/EventSubscription'
        '400':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/NotFound'
        '405':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/MethodNotAllowed'
        '408':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/RequestTimeout'
        '409':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/Conflict'
        '500':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/InternalServerError'
        '503':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/ServiceUnavailable'

  '/hub/{hubId}':
    get:
      tags:
        - EventSubscriptionHub
      operationId: hubGet
      summary: get hub
      description: ''
      deprecated: false
      parameters:
        - name: hubId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '../common/hubSchema.openapi.yaml#/components/schemas/EventSubscription'
        '400':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/NotFound'
        '405':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/MethodNotAllowed'
        '408':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/RequestTimeout'
        '422':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/UnprocessableEntity'
        '500':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/InternalServerError'
        '503':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/ServiceUnavailable'

    delete:
      tags:
        - EventSubscriptionHub
      operationId: hubDelete
      summary: Delete Hub
      description: Delete an existing Hub
      deprecated: false
      parameters:
        - name: hubId
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/NotFound'
        '405':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/MethodNotAllowed'
        '408':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/RequestTimeout'
        '422':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/UnprocessableEntity'
        '500':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/InternalServerError'
        '503':
          $ref: '../common/errorSchema.openapi.yaml#/components/responses/ServiceUnavailable'