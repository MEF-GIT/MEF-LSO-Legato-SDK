openapi: 3.0.3
info:
  title: Legato Service Inventory Components
  version: 4.0.0-RC
  description: |-
    This OAS document contains the schema defintions of common components that
    are reused/referenced by different Legato API specifications.
    This includes common schemas, parameters, responses, headers, etc

    - MEF Developer Guide Reference : MEF_W99 v1.0

    - TMF API Reference : TMF 638 v18.5.1

    Copyright Â© MEF 2020. All Rights Reserved

    This file includes content based on the TM Forum Service Inventory Management API
    (TMF638 v3.0.0) available at
    https://github.com/tmforum-apis/TMF638_ServiceInventory, which is licensed
    by the TM Forum under the Apache License version 2.0. Such content has been
    modified by the MEF Forum and its contributors.
tags:
  - name: ServiceInventorySchema
    description: Service Inventory components used by all Legato APIs.
    
paths: {}
components:
  schemas:
    MefServiceConfiguration:
      description: |-
        Describes the characteristic of an MEF Service schema object.
      allOf:
        - $ref: '../common/apiSchema.openapi.yaml#/components/schemas/Extensible'

    Service:
      description: |-
        The Service instance managed by SOF and retrievable by an BA over the 
        Legato IRP via the Service Invertory API.
      allOf:
        - $ref: '#/components/schemas/ServiceCreate'
        - type: object
          properties:
            endDate: 
              type: "string" 
              format: "date-time" 
              description: |
                Date when the service ends
            hasStarted:
              type: "boolean" 
              description: |-
                If TRUE, this Service has already been started   
            isServiceEnabled: 
              type: "boolean" 
              description: |-
                If FALSE, this particular Service has NOT been enabled for use 
            isStateful: 
              type: "boolean" 
              description: |-
                If TRUE, this Service can be changed without affecting any
                other services
            serviceDate: 
              type: string
              description: |-
                Date when the service was created (whatever its status).
            serviceOrder:
              type: array 
              items:
                $ref: '../order/serviceOrderingSchema.openapi.yaml#/components/schemas/ServiceOrderRef'
            startDate: 
              type: string 
              format: date-time 
              description: |-
                Date when the service starts
            startMode: 
              type: string 
              description: |-
                This attribute is an enumerated integer that indicates how the 
                Service is started, such as: 0: Unknown; 1: Automatically by 
                the managed environment; 2: Automatically by the owning device; 
                3: Manually by the Provider of the Service; 4: Manually by a 
                Customer of the Provider; 5: Any of the above 

    ServiceCreate:
      description: |-
        In the context of a service order, and depending of the action requested (add/modify/delete/noChange) this data structure captures the configuration to apply to an existing subscribed service or to a new one
      allOf:
        - $ref: '../common/apiSchema.openapi.yaml#/components/schemas/Extensible'
        - type: object
          properties:
            category: 
              type: string 
              description: |-
                Is it a customer facing or resource facing service
            description: 
              type: string 
              description: |-
                Free-text description of the service
            mefServiceConfiguration:
              $ref: '#/components/schemas/MefServiceConfiguration'
              description: MEF Service payload
            note: 
              type: array 
              items:
                $ref: '../common/apiSchema.openapi.yaml#/components/schemas/Note'
            place: 
              type: array
              items: 
                $ref: '../common/apiSchema.openapi.yaml#/components/schemas/Place'
            relatedParty:
              type: array
              items:
                $ref: '../common/apiSchema.openapi.yaml#/components/schemas/RelatedPartyRef'
            serviceRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ServiceRelationship'
            serviceSpecification:
              $ref: '../catalog/serviceCatalogSchema.openapi.yaml#/components/schemas/ServiceSpecificationRef'
            serviceType: 
              type: string 
              description: |-
                Business type of the service 
            state:
              $ref: '#/components/schemas/ServiceStateType'
            supportingResource:
              type: array
              readOnly: true
              items:
                $ref: '#/components/schemas/ResourceRef'
            supportingService: 
              type: array
              items:
                $ref: '#/components/schemas/ServiceRef'
              description: |-
                A list of supporting services (SupportingService [*]). A 
                collection of services that support this service (bundling, 
                link CFS to RFS).
    
    ServiceRef:
      description: |-
        Reference to a Service instance.
      allOf:
        - $ref: '../common/apiSchema.openapi.yaml#/components/schemas/Referenceable'
        - type: object
          properties:
            '@type':
              type: string
              default: 'Service'
              
    ServiceRelationship:
      description: |-
        Reference to an related Service and the type of association.
      type: object
      required:
        - relationshipType
        - service
      properties:
        relationshipType:
          $ref: '#/components/schemas/ServiceRelationshipType'
        service:
          $ref: '#/components/schemas/ServiceRef'
           
    ServiceRelationshipType:
      description: Relationship type.
      type: string
      enum:
        - reliesOn
        - dependency
        - crossRef

    ServiceStateType:
      description: |-
        List of possible state for the Service.
      type: string
      enum:
        - feasibilityChecked
        - designed
        - reserved
        - active
        - inactive
        - terminated

    ResourceRef:
      description: |-
        Provides reference to the Resource supporting the Service instance.
      allOf:
        - $ref: '../common/apiSchema.openapi.yaml#/components/schemas/Referenceable'
        - type: object
          properties:
            '@type':
              type: string
              default: 'Resource'

    ServiceCreateNotification:
      description: "Service create notification"
      allOf:
        - $ref: '../common/hubSchema.openapi.yaml#/components/schemas/Notification'
        - type: object
          properties:
            event:
              $ref: '#/components/schemas/ServiceEvent'

    ServiceDeleteNotification:
      description: "Service create notification"
      allOf:
        - $ref: '../common/hubSchema.openapi.yaml#/components/schemas/Notification'
        - type: object
          properties:
            event:
              $ref: '#/components/schemas/ServiceEvent'

    ServiceStateChangeNotification:
      description: "Service State Change notification"
      allOf:
        - $ref: '../common/hubSchema.openapi.yaml#/components/schemas/Notification'
        - type: object
          properties:
            event:
              $ref: '#/components/schemas/ServiceEvent'

    ServiceEvent:
      type: object 
      description: The Service event data structure 
      properties: 
        service: 
          $ref: "#/components/schemas/Service"
