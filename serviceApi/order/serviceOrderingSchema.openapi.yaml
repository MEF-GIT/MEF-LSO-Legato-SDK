openapi: 3.0.3
info:
  title: Legato Service Ordering Components
  version: 4.0.0-RC
  description: >+
    **Legato Service Ordering Components**
    This OAS document contains the schema defintions of Service Order
    components that are reused/referenced by different Legato API
    specifications.
    This includes common schemas, parameters, responses, headers, etc

    - MEF Developer Guide Reference : MEF_W99 v1.0

    - TMF API Reference : TMF 641 v18.5.1


    Copyright © MEF 2020. All Rights Reserved

    This file includes content based on the TM Forum Service Order Management API
    (TMF641 v3.0.0) available at
    https://github.com/tmforum-apis/TMF641_ServiceOrder, which is licensed
    by the TM Forum under the Apache License version 2.0. Such content has been
    modified by the MEF Forum and its contributors.
tags:
  - name: ServiceOrderSchema
    description: Common Service Order schema components used by all Legato APIs.
    
paths: {}
components:
  schemas:
    ActionType:
      description: Action type to be described on the order item.
      type: string
      enum:
        - add
        - modify
        - delete
        - noChange
                
    ServiceRef:
      description: |-
        Reference to a Service instance.
      allOf:
        - $ref: '../common/apiSchema.openapi.yaml#/components/schemas/Referenceable'
        - type: object
          properties:
            '@type':
              type: string
              default: 'Service'   
           
    ServiceOrder:
      description: |-
        A Service Order is used to request operations on a Service instance.
        A Service Order groups one or more one Service Order Items - one per
        specific action on a Service instance. The Action associated with the
        Service Order Item describes the operation (add, remove, update) to be
        applied on the specified Service instance.The Service Order Item and
        its associated Action can operate on both existing (remove, update) as
        well as future (add) Service instance.The Service Order is triggered
        from the Business Application (BA) system in charge of the Product Order
        management to the Service Orchestration Function (SOF) system that will
        orchestrate the Service fulfillment.
      allOf:
        - $ref: '#/components/schemas/ServiceOrderCreate'
        - type: object
          properties:
            state:
              $ref: '#/components/schemas/ServiceOrderStateType'
            orderDate:
              description: Date when the order was created.
              type: string
              format: date-time
            startDate:
              description: |-
                Date when the order processing was started
              type: string
              format: date-time
            expectedCompletionDate:
              description: Expected delivery date set by the provider.
              type: string
              format: date-time
            completionDate:
              description: Date when the order was completed
              type: string
              format: date-time
    
    ServiceOrderCreate:
      description: |-
        This structure is used in the operation POST for a serviceOrder request
      allOf:
        - $ref: '../common/apiSchema.openapi.yaml#/components/schemas/Addressable'
        - type: object
          properties:
            externalId:
              description: |-
                ID given by the consumer and only understandable by client
                (to facilitate client searches)
              type: string
            description:
              description: |-
                A free-text description of the service order
              type: string
            category:
              description: |-
                Used to categorize the order that can be useful for OM system
                (e.g. “broadband”, “TVOption”, ...)'
              type: string
            note: 
              type: array 
              items:
                $ref: '../common/apiSchema.openapi.yaml#/components/schemas/Note'
            notificationContact:
              type: string 
              description: |-
                Contact attached to the order to send back information 
                regarding this order
            priority:
              description: |-
                A way that can be used by consumers to prioritize orders in
                Service Order Management system (from 0 to 4 : 0 is the highest
                priority, and 4 the lowest
              type: integer
            requestedStartDate:
              description: |-
                Order start date wished by the requestor
              type: string
              format: date-time
            requestedCompletionDate:
              description: |-
                Requested delivery date from the requestor perspective
              type: string
              format: date-time
            relatedParty:
              type: array
              items:
                $ref: '../common/apiSchema.openapi.yaml#/components/schemas/RelatedPartyRef'
            orderItem:
              type: array
              items:
                $ref: '#/components/schemas/ServiceOrderItem'
              minItems: 1
            orderRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ServiceOrderRelationship'
    
    ServiceOrderRef:
      description: |-
        Reference to a Service Order instance.
      allOf:
        - $ref: '../common/apiSchema.openapi.yaml#/components/schemas/Referenceable'
        - type: object
          properties:
            '@type':
              type: string
              default: 'ServiceOrder'
                   
    ServiceOrderRelationship:
      description: |-
        Reference to an related Service Order and the type of association.
      type: object
      required:
        - relationshipType
        - serviceOrder
      properties:
        relationshipType:
          $ref: '#/components/schemas/OrderRelationshipType'
        serviceOrder:
           $ref: '#/components/schemas/ServiceOrderRef'
           
    OrderRelationshipType:
      description: Relationship type.
      type: string
      enum:
        - reliesOn
        - dependency
        - crossRef

    ServiceOrderStateType:
      description: |-
        List of possible state for the Service Order. 
        * ACKNOWLEDGED - Order has been received and has passed message
          validation.
        * IN_PROGRESS - Service Fulfillment has started.
        * PENDING - Order is currently in a waiting stage for an explicitly
          action/activity to be completed before the order can progress further,
          pending order amend or cancel assessment. A pending stage can lead
          into auto cancellation of an order, if no action is take within the
          defined timeframes to be described under the Agreement.
        * HELD - Order cannot be progressed due to a temporary issue. For
          example, processing is temporarily delayed to resolve an
          infrastructure shortfall to facilitate supply of order. Upon
          resolution of the issue, the order will continue to progress.
        * CANCELLED - In-Flight Order has been successfully cancelled.
        * COMPLETED - Provisioning completed and the Service is now active.
        * FAILED - All of the Order items have failed which results in the
          entire Order to be Failed.
        * PARTIAL - Some of the Order items processing have failed and some have
          succeeded so the entire Order is in a Partial state. This provides
          support for partial Failure of an Order.
        * REJECTED - An order failed the Order Feasibility checks. Service
          technical eligibility is not done throught service order API but with
          dedicated serviceQualification API (from preOrdering domain) invalid
          information is provided through the order request. The order request
          fails to meet business rules for ordering.
      type: string
      enum:
        - ACKNOWLEDGED
        - IN_PROGRESS
        - PENDING
        - HELD
        - CANCELLED
        - COMPLETED
        - FAILED
        - PARTIAL
        - REJECTED
        
    ServiceOrderItem:
      description: |-
        An identified part of the order. A service order is decomposed into one
        or more order items.
      allOf:
        - $ref: '../common/apiSchema.openapi.yaml#/components/schemas/Extensible'
        - type: object
          required:
            - id
            - service
          properties:
            id:
              description: |-
                Identifier of the line item
              type: string
            action:
              $ref: '#/components/schemas/ActionType'
            service:
              $ref: '../inventory/serviceInventorySchema.openapi.yaml#/components/schemas/ServiceCreate'
            state:
              $ref: '#/components/schemas/ServiceOrderStateType'
            orderItemRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ServiceOrderItemRelationship'
              minItems: 0
              maxItems: 1
    
    ServiceOrderItemRef:
      description: |-
        Reference to a Service Order Item instance.
      allOf:
        - $ref: '../common/apiSchema.openapi.yaml#/components/schemas/Referenceable'
        - type: object
          properties:
            '@type':
              type: string
              default: 'ServiceOrderItem' 
              
    ServiceOrderItemRelationship:
      description: |-
        Reference to an related Service Order Item and the type of association.
      type: object
      required:
        - relationshipType
        - serviceOrder
      properties:
        relationshipType:
          $ref: '#/components/schemas/OrderItemRelationshipType'
        serviceOrder:
           $ref: '#/components/schemas/ServiceOrderItemRef'

    OrderItemRelationshipType:
      description: Relationship type.
      type: string
      enum:
        - reliesOn
        - dependency
        - crossRef
      
    ServiceOrderCreateNotification:
      description: "ServiceOrder create notification"
      allOf:
        - $ref: '../common/hubSchema.openapi.yaml#/components/schemas/Notification'
        - type: object
          properties:
            event:
              $ref: '#/components/schemas/ServiceOrderEvent'

    ServiceOrderStateChangeNotification:
      description: "ServiceOrder State Change notification"
      allOf:
        - $ref: '../common/hubSchema.openapi.yaml#/components/schemas/Notification'
        - type: object
          properties:
            event:
              $ref: '#/components/schemas/ServiceOrderEvent'

    ServiceOrderItemStateChangeNotification:
      description: "ServiceOrder State Change notification"
      allOf:
        - $ref: '../common/hubSchema.openapi.yaml#/components/schemas/Notification'
        - type: object
          properties:
            event:
              $ref: '#/components/schemas/ServiceOrderItemEvent'

    ServiceOrderEvent:
      type: object 
      description: The ServiceOrder event data structure 
      properties: 
          serviceOrder: 
            $ref: "#/components/schemas/ServiceOrder"

    ServiceOrderItemEvent:
      type: object 
      description: The ServiceOrder event data structure 
      properties: 
          serviceOrder: 
            $ref: "#/components/schemas/ServiceOrderItem"
