openapi: 3.0.1
info:
  description: >-
    **This file forms part of MEF W99** 

    **This specification represents MEF work in progress and is subject to
    change.** 

    Supported use cases: - Send Notifications

    Copyright 2023 MEF Forum and its contributors.

    This file includes content based on the TM Forum Service Order API (TMF641
    v4.1.0) available at https://github.com/tmforum-apis/TMF641_ServiceOrder,
    which is licensed by the TM Forum under the Apache License version 2.0.
    Such content has been modified by the MEF Forum and its contributors.
  title: Legato Service Ordering Notification API
  version: 5.0.0-RC
servers:
  - url: 'https://{serverBase}/mefApi/legato/serviceOrderingNotification/v5/'
    variables:
      serverBase:
        default: mef.net
        description: The base of BUS's URL.
tags:
  - description: |
      The SOF's endpoint to send particular event types notifications to.
    name: Notification listeners
paths:
  /listener/serviceOrderCreateEvent:
    post:
      description:
        This endpoint is used to receive notifications on Service Order Create
      operationId: serviceOrderCreateEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ServiceOrderEvent'
        description: The ProductOrder to be created
        required: true
      responses:
        '204':
          description:
            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '408':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error408'
          description: Request Time-out
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - serviceOrderCreateEvent
      summary: Service Order Create Notification endpoint
      tags:
        - Notification listeners
  /listener/serviceOrderStateChangeEvent:
    post:
      description: >-
        This endpoint is used to receive notifications on Service Order State
        Change
      operationId: serviceOrderStateChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ServiceOrderEvent'
        description: The ProductOrder to be created
        required: true
      responses:
        '204':
          description:
            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '408':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error408'
          description: Request Time-out
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - serviceOrderStateChangeEvent
      summary: Service Order State Change Notification endpoint
      tags:
        - Notification listeners
  /listener/serviceOrderInformationRequiredEvent:
    post:
      description: >-
        This endpoint is used to receive notifications on Service Order
        Information Required
      operationId: serviceOrderInformationRequiredEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ServiceOrderEvent'
        description: The ProductOrder to be created
        required: true
      responses:
        '204':
          description:
            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '408':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error408'
          description: Request Time-out
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - serviceOrderInformationRequiredEvent
      summary: Service Order Information Required Notification endpoint
      tags:
        - Notification listeners
  /listener/serviceOrderItemStateChangeEvent:
    post:
      description: >-
        This endpoint is used to receive notifications on Service Order Item
        State Change
      operationId: serviceOrderItemStateChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ServiceOrderEvent'
        description: The ProductOrder to be created
        required: true
      responses:
        '204':
          description:
            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '408':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error408'
          description: Request Time-out
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - serviceOrderItemStateChangeEvent
      summary: Service Order Item State Change Notification endpoint
      tags:
        - Notification listeners
components:
  schemas:
    Error400Code:
      type: string
      description: >-
        One of the following error codes:

        - missingQueryParameter: The URI is missing a required query-string
        parameter

        - missingQueryValue: The URI is missing a required query-string
        parameter value

        - invalidQuery: The query section of the URI is invalid.

        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
    Error:
      type: object
      description: >
        Standard Class used to describe API response error

        Not intended to be use directly. The `code` in the HTTP header is used
        as a discriminator for the type of error returned in runtime.
      properties:
        reason:
          type: string
          description: >-
            Text that explains the reason for error. This can be shown to a
            client user.
          maxLength: 255
        message:
          type: string
          description: >-
            Text that provide mode details and corrective actions related to
            the error. This can be shown to a client user.
        referenceError:
          type: string
          format: uri
          description: url pointing to documentation describing the error
      required:
        - reason
    Error400:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error400Code'
          required:
            - code
      description:
        'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'
    Error401:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error401Code'
          required:
            - code
      description:
        'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'
    Error401Code:
      type: string
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
    Error403:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error403Code'
          required:
            - code
      description:
        'Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)'
    Error403Code:
      type: string
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
    Error408:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              type: string
              description: >-
                List of supported error codes:

                - timeOut: Request Time-out - indicates that the server did not
                receive a complete request message within the time that it was
                prepared to wait.
              enum:
                - timeOut
          required:
            - code
      description:
        'Request Time-out (https://tools.ietf.org/html/rfc7231#section-6.5.7)'
    Error500:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              type: string
              description: >-
                One of the following error codes:

                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              enum:
                - internalError
          required:
            - code
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Event:
      type: object
      description: >-
        Event class is used to describe information structure used for
        notification.
      properties:
        eventId:
          type: string
          description: Id of the event
        eventTime:
          type: string
          format: date-time
          description: Date-time when the event occurred
      required:
        - eventId
        - eventTime
    ServiceOrderEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          properties:
            eventType:
              $ref: '#/components/schemas/ServiceOrderEventType'
            event:
              $ref: '#/components/schemas/ServiceOrderEventPayload'
          required:
            - event
            - eventType
    ServiceOrderEventPayload:
      type: object
      description: >-
        The identifier of the Service Order and Order Item being subject of
        this event.
      properties:
        orderItemId:
          type: string
          description: >-
            ID of the Service Order Item (within the Service Order) which state
            change triggered the event. Mandatory for
            `serviceOrderItemStateChangeEvent`
        id:
          type: string
          description: ID of the Service Order
        href:
          type: string
          description: Hyperlink to access the Service Order
      required:
        - id
    ServiceOrderEventType:
      type: string
      description: Indicates the type of Service Order event.
      enum:
        - serviceOrderCreateEvent
        - serviceOrderStateChangeEvent
        - serviceOrderItemStateChangeEvent
        - serviceOrderInformationRequiredEvent
  securitySchemes:
    oauth2MEFLSOAPI:
      description: Default m2m client code
      flows:
        clientCredentials:
          refreshUrl: 'http://mef.net/example/refresh'
          scopes:
            serviceOrderCreateEvent:
              Scope for operation serviceOrderCreateEvent
            serviceOrderStateChangeEvent:
              Scope for operation serviceOrderStateChangeEvent
            serviceOrderInformationRequiredEvent:
              Scope for operation serviceOrderInformationRequiredEvent
            serviceOrderItemStateChangeEvent:
              Scope for operation serviceOrderItemStateChangeEvent
          tokenUrl: 'http://mef.net/example/token'
      type: oauth2
